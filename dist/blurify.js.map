{"version":3,"file":"blurify.js","sources":["../src/common.ts","../src/index.ts"],"sourcesContent":["export function preload(images: HTMLImageElement[]) {\n    const imageNodes: HTMLImageElement[] = [];\n    let count = 0, doneAction = (images: any[]) => {};\n\n    images = (typeof images != 'object') ? [images] : images;\n\n    images.length === 0 && doneAction(imageNodes);\n\n    images.map((image: HTMLImageElement) => {\n        const _image = new Image();\n        _image.crossOrigin = '*';\n        _image.src = image.dataset ? image.dataset.src : image.getAttribute('data-src');\n        _image.onload = imageLoad;\n        _image.onerror = imageLoad;\n        imageNodes.push(_image);\n    });\n\n    function imageLoad() {\n        count++;\n        if (count == images.length) doneAction(imageNodes);\n    }\n\n    return {\n        done(cb: (images: []) => void) {\n            doneAction = arguments[0] || doneAction;\n        },\n    };\n}\n\nexport function cssSupport(key: string, value: string) {\n    const element: HTMLDivElement = document.createElement('div');\n\n    switch (arguments.length) {\n        case 1:\n            return key in element.style ? true : false;\n        case 2:\n            element.style[key] = value;\n            return element.style[key] ? true : false;\n        default:\n            return false;\n    }\n}\n","import { preload, cssSupport } from './common';\n\nexport default function blurify(options: {\n    blur: number\n    mode: string\n    images: HTMLImageElement | HTMLImageElement[]\n} = {\n    blur: 6,\n    mode: 'auto',\n    images: [],\n}) {\n    if (!(this instanceof blurify)) return new blurify(options);\n\n    if (typeof options === 'number') {\n        options = {\n            blur: options,\n            images: arguments[1],\n            mode: 'auto',\n        };\n    }\n\n    this.options = options;\n    this.blur = options.blur || 6;\n    this.mode = options.mode || 'css';\n    console.log();\n    \n    this.$els = options.images.nodeType == 1 ? [options.images] : [].slice.call(options.images);\n\n    if (this.mode == 'auto') {\n        cssSupport('filter', 'blur(1px)') ? this.useCSSMode() : this.useCanvasMode();\n    } else if (this.mode == 'css') {\n        this.blur = this.blur / 2;\n        this.useCSSMode();\n    } else {\n        this.useCanvasMode();\n    }\n}\n\nblurify.prototype.useCSSMode = function (): void {\n    console.log(this.$els);\n    \n    this.$els.map((el: HTMLImageElement) => {\n        console.log('el', el);\n        \n        el.src = el.dataset ? el.dataset.src : el.getAttribute('data-src');\n        el.style['filter'] = el.style['-webkit-filter'] = `blur(${this.blur}px)`;\n    });\n};\n\nblurify.prototype.useCanvasMode = function (): void {\n    this.imageType = this.options.imageType || `image/jpeg`;\n\n    preload(this.$els).done((images: []) => {\n        images.map((image, index) => {\n            this.$els[index].src = this.getDataURL(image);\n        });\n    });\n};\n\nblurify.prototype.blurify = function (canvas: HTMLCanvasElement, blur: number | string): void {\n    const ctx = canvas.getContext('2d');\n    ctx.globalAlpha = 1 / (2 * +blur);\n    for (let y = -blur; y <= blur; y += 2) {\n        for (let x = -blur; x <= blur; x += 2) {\n            ctx.drawImage(canvas, x, y);\n            if (x >= 0 && y >= 0) ctx.drawImage(canvas, -(x - 1), -(y - 1));\n        }\n    }\n    ctx.globalAlpha = 1;\n};\n\nblurify.prototype.getDataURL = function(image: HTMLImageElement) {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n\n    canvas.width = image.width;\n    canvas.height = image.height;\n    ctx.drawImage(image, 0, 0);\n\n    this.blurify(canvas, this.blur);\n\n    return canvas.toDataURL(this.imageType);\n};\n"],"names":[],"mappings":"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"}