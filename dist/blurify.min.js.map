{"version":3,"file":"blurify.min.js","sources":["../src/common.ts","../src/index.ts"],"sourcesContent":["export function preload(images: HTMLImageElement[]) {\n    const imageNodes: HTMLImageElement[] = [];\n    let count = 0, doneAction = (images: any[]) => {};\n\n    images = (typeof images != 'object') ? [images] : images;\n\n    images.length === 0 && doneAction(imageNodes);\n\n    images.map((image: HTMLImageElement) => {\n        const _image = new Image();\n        _image.crossOrigin = '*';\n        _image.src = image.dataset ? image.dataset.src : image.getAttribute('data-src');\n        _image.onload = imageLoad;\n        _image.onerror = imageLoad;\n        imageNodes.push(_image);\n    });\n\n    function imageLoad() {\n        count++;\n        if (count == images.length) doneAction(imageNodes);\n    }\n\n    return {\n        done(cb: (images: []) => void) {\n            doneAction = arguments[0] || doneAction;\n        },\n    };\n}\n\nexport function cssSupport(key: string, value: string) {\n    const element: HTMLDivElement = document.createElement('div');\n\n    switch (arguments.length) {\n        case 1:\n            return key in element.style ? true : false;\n        case 2:\n            element.style[key] = value;\n            return element.style[key] ? true : false;\n        default:\n            return false;\n    }\n}\n","import { preload, cssSupport } from './common';\n\nexport default function blurify(options: {\n    blur: number\n    mode: string\n    images: HTMLImageElement | HTMLImageElement[]\n} = {\n    blur: 6,\n    mode: 'auto',\n    images: [],\n}) {\n    if (!(this instanceof blurify)) return new blurify(options);\n\n    if (typeof options === 'number') {\n        options = {\n            blur: options,\n            images: arguments[1],\n            mode: 'auto',\n        };\n    }\n\n    this.options = options;\n    this.blur = options.blur || 6;\n    this.mode = options.mode || 'css';\n    console.log();\n    \n    this.$els = options.images.nodeType == 1 ? [options.images] : [].slice.call(options.images);\n\n    if (this.mode == 'auto') {\n        cssSupport('filter', 'blur(1px)') ? this.useCSSMode() : this.useCanvasMode();\n    } else if (this.mode == 'css') {\n        this.blur = this.blur / 2;\n        this.useCSSMode();\n    } else {\n        this.useCanvasMode();\n    }\n}\n\nblurify.prototype.useCSSMode = function (): void {\n    console.log(this.$els);\n    \n    this.$els.map((el: HTMLImageElement) => {\n        console.log('el', el);\n        \n        el.src = el.dataset ? el.dataset.src : el.getAttribute('data-src');\n        el.style['filter'] = el.style['-webkit-filter'] = `blur(${this.blur}px)`;\n    });\n};\n\nblurify.prototype.useCanvasMode = function (): void {\n    this.imageType = this.options.imageType || `image/jpeg`;\n\n    preload(this.$els).done((images: []) => {\n        images.map((image, index) => {\n            this.$els[index].src = this.getDataURL(image);\n        });\n    });\n};\n\nblurify.prototype.blurify = function (canvas: HTMLCanvasElement, blur: number | string): void {\n    const ctx = canvas.getContext('2d');\n    ctx.globalAlpha = 1 / (2 * +blur);\n    for (let y = -blur; y <= blur; y += 2) {\n        for (let x = -blur; x <= blur; x += 2) {\n            ctx.drawImage(canvas, x, y);\n            if (x >= 0 && y >= 0) ctx.drawImage(canvas, -(x - 1), -(y - 1));\n        }\n    }\n    ctx.globalAlpha = 1;\n};\n\nblurify.prototype.getDataURL = function(image: HTMLImageElement) {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n\n    canvas.width = image.width;\n    canvas.height = image.height;\n    ctx.drawImage(image, 0, 0);\n\n    this.blurify(canvas, this.blur);\n\n    return canvas.toDataURL(this.imageType);\n};\n"],"names":["preload","images","imageLoad","count","length","doneAction","imageNodes","map","image","_image","Image","crossOrigin","src","dataset","getAttribute","onload","onerror","push","done","arguments","cssSupport","key","value","element","document","createElement","style","blurify","options","blur","mode","console","log","$els","nodeType","slice","call","useCSSMode","useCanvasMode","prototype","el","_this","imageType","index","getDataURL","canvas","ctx","getContext","globalAlpha","y","x","drawImage","width","height","toDataURL"],"mappings":"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"}